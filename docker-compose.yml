version: "3.9"

services:
  #  nginx:
  #    build:
  #      context: .
  #    image: nginx:1.23.3
  #    environment:
  #      - "TIMEZONE=Asia/Shanghai"
  #    restart: always
  #    networks:
  #      app_net:
  #        ipv4_address: 172.10.12.100
  #    ports:
  #      - "8011:80"
  #    volumes:
  #      - ${WEB_ROOT}:/webroot/
  #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #      - ./nginx/conf.d/:/etc/nginx/conf.d/
  #    depends_on:
  #      - php

  # docker化部署需要 否则不需要
  #  serv:
  #    image: php_cli:8.2.5
  #    #    build:
  #    #      context: .
  #    #      dockerfile: ./images/hyperf/Dockerfile
  #    #    restart: no
  #    volumes:
  #      - ${SERV_ROOT}:/app/
  #      - ./phpcli/php.ini:/usr/local/etc/php/php.ini
  #      - ./phpcli/conf.d/docker-php-ext-opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
  #      - ./phpcli/conf.d/docker-php-ext-swoole.ini:/usr/local/etc/php/conf.d/docker-php-ext-swoole.ini
  #    ports:
  #      - "9501:9501"
  #      - "9502:9502"
  #    networks:
  #      app_net:
  #        ipv4_address: 172.10.12.120
  #    command: [ "php","/app/bin/run","start" ]
  #    depends_on:
  #      - redis
  #      - mysql

  redis:
    image: redis/redis-stack:7.2.0-v6-arm64
    restart: always
    ports:
      - "16379:6379"
      - "18001:8001"
    networks:
      app_net:
    environment:
      - TZ=Asia/Shanghai

  #  CREATE USER 'root'@'%' IDENTIFIED BY 'fuck123sql';
  #  GRANT ALL PRIVILEGES ON *.* TO 'root'@'%';
  #  FLUSH PRIVILEGES;
  mysql:
    image: bitnami/mysql:8.0.28
    volumes:
      #      - ./mysql/my.cnf:/etc/my.cnf
      #      - ./mysql/mysql-data:/var/lib/mysql
      - ./mysql/bitnami.my.cnf:/opt/bitnami/mysql/conf/my.cnf
      - ./data/mysql-data:/bitnami/mysql/data
    restart: always
    environment:
      TZ: 'Asia/Shanghai'
      explicit_defaults_for_timestamp: true
      lower_case_table_names: 1
      MYSQL_ROOT_PASSWORD: 'fuck123sql'
      #      MYSQL_ROOT_HOST: '%'
      MYSQL_MAX_CONNECTIONS: 200
    user: root
    ports:
      - "13306:3306"
    networks:
      app_net:
        ipv4_address: 172.18.18.188

  rabbitmq:
    image: bitnami/rabbitmq:3.11.25
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_ERLANG_COOKIE=nav_rc
      - TZ=Asia/Shanghai
    volumes:
      - ./data/rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "25672:5672"
      - "35672:15672"
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 111111
        hard: 111111
    networks:
      app_net:

  #  nacos:
  #    image: nacos/nacos-server:v2.2.3-slim
  #    volumes:
  #      - ./data/nacos/logs:/home/nacos/logs
  #      - ./data/nacos/init.d:/home/nacos/init.d
  #    environment:
  #      - PREFER_HOST_MODE=hostname
  #      - MODE=standalone
  ##      - SPRING_DATASOURCE_PLATFORM=embedded
  ##      - MYSQL_SERVICE_HOST=172.18.18.188
  ##      - MYSQL_SERVICE_PORT=13306
  ##      - MYSQL_SERVICE_USER=root
  ##      - MYSQL_SERVICE_PASSWORD=fuck123sql
  ##      - MYSQL_SERVICE_DB_NAME=nacos
  ##      - MYSQL_DATABASE_NUM=1
  ##      - MYSQL_SERVICE_DB_PARAM=useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=utf8&allowMultiQueries=true
  #    ports:
  #      - "8848:8848"
  #    depends_on:
  #      - mysql
  #    networks:
  #      app_net:
  #        ipv4_address: 172.18.18.111

  #  etcd:
  #    image: quay.io/coreos/etcd:v3.5.8
  #    environment:
  #      - TZ=Asia/Shanghai
  #    command:
  #      - /usr/local/bin/etcd
  #      - --name
  #      - nav-etcd-1
  #      - --data-dir
  #      - ./data/etcd-data
  #      - --listen-client-urls
  #      - http://0.0.0.0:2379
  #      - --advertise-client-urls
  #      - http://0.0.0.0:2379
  #      - --listen-peer-urls
  #      - http://0.0.0.0:2380
  #      - --initial-advertise-peer-urls
  #      - http://0.0.0.0:2380
  #      - --initial-cluster
  #      - nav-etcd-1=http://0.0.0.0:2380
  #      - --initial-cluster-token
  #      - nav-etcd-token
  #      - --initial-cluster-state
  #      - new

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
#    environment:
#      - discovery.type=single-node
#      - ELASTICSEARCH_SECURITY_ENABLED=false
#      - http.max_content_length=1gb
#      - http.max_initial_line_length=16k
#      - http.max_header_size=8kb
#      - http.max_chunk_size=512mb
#    ulimits:
#      nofile:
#        soft: 65536
#        hard: 65536
#    volumes:
#      - ./data/es-data:/usr/share/elasticsearch/data
#    ports:
#      - "19200:9200"
#      - "19300:9300"
#    networks:
#      app_net:
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.8.0
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - "15601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      app_net:

volumes:
  es_data:
    driver: local

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: 172.18.18.0/24
